name: "CI"

on:
  push:
    branches: [ develop, main]
  schedule:
    - cron: '0 2 * * *'  # Runs nightly at 2 AM UTC on main branch

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      Solution_Name: "Finance.NET.sln"
      Test_Project_Path: "tests/Tests.csproj"       
      FORCE_COLOR: "true"
      DOTNET_LOGGING__CONSOLE__COLORBEHAVIOR: Enabled

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: develop
        fetch-depth: 0 

    - name: Initialize dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Set up .NET tools
      run: |        
        dotnet tool install --global dotnet-sonarscanner
        dotnet tool install --global dotnet-reportgenerator-globaltool        

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: 'csharp' 
        build-mode: 'none'         

    - name: Run CodeQL
      uses: github/codeql-action/analyze@v3
      with:
        category: '/language:csharp'

    - name: Restore
      run: dotnet restore "${{ env.Solution_Name }}"

    - name: Build
      run: dotnet build "${{ env.Solution_Name }}" --configuration Release --no-restore

    - name: Run tests
      shell: pwsh
      run: |
          dotnet test "${{ env.Test_Project_Path }}" --collect:"XPlat Code Coverage" --results-directory ./TestResults/Tests --configuration Release --logger "console;verbosity=detailed"
          if ($LASTEXITCODE -ne 0) {
            Write-Host "Tests failed"
            exit 1
          }
          reportgenerator -reports:./TestResults/Tests/**/coverage.cobertura.xml -targetdir:./TestResults/Reports -reporttypes:"Html;lcov;SonarQube"
      env:
          FinanceNet__AlphaVantageApiKey: ${{ secrets.ALPHAVANTAGEAPIKEY }}

    - name: Set up SonarCloud
      uses: SonarSource/sonarqube-scan-action@v4
      with:
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORG }}
          -Dsonar.token=${{ secrets.SONAR_TOKEN }}
          -Dsonar.coverageReportPaths=./TestResults/Reports/SonarQube.xml
          -Dsonar.inclusions=**/*.cs
          -Dsonar.exclusions=**/*.html,**/*.json,**/*.yaml,**/*.yml

    - name: Upload to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        path-to-lcov: ./TestResults/Reports/lcov.info
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

    - name: Upload to GitHub
      uses: actions/upload-artifact@v4.4.3
      with:
        name: unit-test-coverage-report
        path: ./TestResults/Reports


