name: "CI"

on:
  workflow_dispatch: # Manual trigger
  push:
    branches: [ develop, main]
  schedule:
    - cron: '0 2 * * *'  # Runs nightly at 2 AM UTC on main branch

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      Solution_Name: "Finance.NET.sln"
      Test_Project_Path: "tests/Tests.csproj"       
      FORCE_COLOR: "true"
      DOTNET_LOGGING__CONSOLE__COLORBEHAVIOR: Enabled

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: develop
        fetch-depth: 0 

    - name: Install dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Set up dotnet
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Restore
      run: dotnet restore "${{ env.Solution_Name }}"

    - name: Build
      run: dotnet build "${{ env.Solution_Name }}" --configuration Release --no-restore

    - name: Run tests
      shell: pwsh
      run: |
          dotnet test "${{ env.Test_Project_Path }}" --collect:"XPlat Code Coverage" --results-directory ./TestResults/Tests --configuration Release --logger "console;verbosity=detailed"
          if ($LASTEXITCODE -ne 0) {
            Write-Host "Tests failed"
            exit 1
          }
          reportgenerator -reports:./TestResults/Tests/**/coverage.cobertura.xml -targetdir:./TestResults/Coverage -reporttypes:"Html;lcov"
      env:
          FinanceNet__AlphaVantageApiKey: ${{ secrets.ALPHAVANTAGEAPIKEY }}

    - name: Upload coverage to Codacy
      uses: codacy/codacy-coverage-reporter-action@v1
      with:
        file: ./TestResults/Coverage/lcov.info 
      env:
        CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v4
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: SonarCloud analysis
      run: |
          dotnet sonarscanner begin /k:"${{ secrets.SONAR_PROJECT_KEY }}" /d:sonar.organization="${{ secrets.SONAR_ORG }}" \
            /d:sonar.coverageReportPaths=./TestResults/Coverage/lcov.info
          dotnet build --configuration Release
          dotnet sonarscanner end

    - name: Upload to Codecov
      uses: codecov/codecov-action@v5
      with:
        files: ./TestResults/Tests/**/coverage.cobertura.xml
        flags: dotnet
        fail_ci_if_error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        path-to-lcov: ./TestResults/Coverage/lcov.info
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

    - name: Upload to GitHub
      uses: actions/upload-artifact@v4.4.3
      with:
        name: unit-test-coverage-report
        path: ./TestResults/Coverage


