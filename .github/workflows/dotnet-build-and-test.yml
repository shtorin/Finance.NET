name: CI

on:
  push:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      Solution_Name: Finance.NET.sln
      Test_Project_Path: tests/Tests.csproj      
      FORCE_COLOR: "true"
      DOTNET_LOGGING__CONSOLE__COLORBEHAVIOR: Enabled

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: develop
        fetch-depth: 0 

    - name: Install .Net
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x

    - name: Install reportgenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool
           dotnet tool install --global coveralls.net

    - name: Restore dependencies
      run: dotnet restore ${{ env.Solution_Name }}

    - name: Build project
      run: dotnet build ${{ env.Solution_Name }} --configuration Release --no-restore

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: 'csharp'

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

    - name: Run unit tests
      shell: pwsh
      run: |
          dotnet test ${{ env.Test_Project_Path }} --collect:"XPlat Code Coverage" --results-directory ./TestResults/UnitTests --configuration Release --filter Category=UnitTests --logger "console;verbosity=detailed"
          if ($LASTEXITCODE -ne 0) {
            Write-Host "Tests failed"
            exit 1
          }
          reportgenerator -reports:./TestResults/UnitTests/**/coverage.cobertura.xml -targetdir:./TestResults/Coverage/Unit -reporttypes:Html;lcov
    
    - name: Upload to Coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: coveralls --lcov -i ./TestResults/Coverage/lcov.info


    # - name: Run integration tests
    #   shell: pwsh
    #   run: |
    #       dotnet test ${{ env.Test_Project_Path }} --collect:"XPlat Code Coverage" --results-directory ./TestResults/IntegrationTests --configuration Release --filter Category=IntegrationTests --logger "console;verbosity=detailed"
    #       if ($LASTEXITCODE -ne 0) {
    #         Write-Host "Tests failed, marking job as failed"
    #         exit 1
    #       }
    #       reportgenerator -reports:./TestResults/IntegrationTests/**/coverage.cobertura.xml -targetdir:./TestResults/Coverage/Integration -reporttypes:Html
    #   env:
    #       FinanceNet__AlphaVantageApiKey: ${{ secrets.ALPHAVANTAGEAPIKEY }}
      
    # - name: Upload unit test coverage report
    #   uses: actions/upload-artifact@v4.4.3
    #   with:
    #     name: unit-test-coverage-report
    #     path: ./TestResults/Coverage/Unit

    # - name: Upload integration test coverage report
    #   uses: actions/upload-artifact@v4.4.3
    #   with:
    #     name: integration-test-coverage-report
    #     path: ./TestResults/Coverage/Integration
